# Description
Open redirection vulnerabilities arise when an application incorporates user-controllable data into the target of a redirection in an unsafe way. An attacker can construct a URL within the application that causes a redirection to an arbitrary external domain.

# Impact 
This vulnerability can be leveraged to facilitate phishing attacks against application users. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.
Furthermore, this vulnerability can lead to other vulnerabilities, such as Cross-site scripting or Server-side request forgery.

# Steps to reproduce
1. Visit {{ payload_evidence }}
2. You should be redirected to an external domain.

# Remediation
If possible, applications should avoid incorporating user-controllable data into redirection targets. In many cases, this behaviour can be avoided in two ways:
- Remove the redirection function from the application, and replace links to it with direct links to the relevant target URLs.
- Maintain a server-side list of all URLs that are permitted for redirection. Instead of passing the target URL as a parameter to the redirector, pass an index into this list.

# Sources
- https://portswigger.net/kb/issues/00500100_open-redirection-reflected
- https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html
- https://www.invicti.com/learn/open-redirect-open-redirection/

# {{ tool }} summary
{{ tool_output }}